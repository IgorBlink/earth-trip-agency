'use client';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';

const getDangerColor = (level) => {
  switch(level) {
    case '–ù–∏–∑–∫–∏–π': return 'text-green-400';
    case '–°—Ä–µ–¥–Ω–∏–π': return 'text-yellow-400';
    case '–í—ã—Å–æ–∫–∏–π': return 'text-orange-400';
    case '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π': return 'text-red-400';
    default: return 'text-gray-400';
  }
};

export default function EarthCreaturesGuide() {
  const creatures = [
    {
      emoji: '/back.png',
      name: '–ë–∞—Ö—Ä–µ–¥–∏–Ω',
      classification: '–°–ê–ú–û–ï –ó–ê–í–û–ó–ù–û–ï –ñ–ò–í–û–¢–ù–û–ï –ù–ê –ü–õ–ê–ù–ï–¢–ï –ó–ï–ú–õ–Ø',
      description: '–ß–µ—Ç–≤–µ—Ä–æ–Ω–æ–≥–∏–π —Ä–∞–± —á–µ–ª–æ–≤–µ–∫–∞. –í–∏–ª—è–µ—Ç —Ö–≤–æ—Å—Ç–æ–º –∑–∞ –µ–¥—É. –õ–∞–µ—Ç –Ω–∞ –≤—Å—ë –ø–æ–¥—Ä—è–¥. IQ = 0.',
      dangerLevel: '–ù–∏–∑–∫–∏–π',
      abilities: ['–õ–∞–π 24/7', '–ü–æ–µ–¥–∞–Ω–∏–µ –Ω–æ—Å–∫–æ–≤', '–°–ª—é–Ω–∏ –≤–µ–∑–¥–µ'],
      habitat: '–î–∏–≤–∞–Ω —Ö–æ–∑—è–∏–Ω–∞',
      memeRating: 'üî•üî•üî•'
    },
    {
      emoji: 'üê±',
      name: '–ö–æ—à–∫–∞',
      classification: '–î–æ–º–∞—à–Ω–∏–π –¥–∏–∫—Ç–∞—Ç–æ—Ä',
      description: '–ü—É—à–∏—Å—Ç—ã–π —Ç–∏—Ä–∞–Ω. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –ª—é–¥–µ–π, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –µ–¥—É. –¶–∞—Ä–∞–ø–∞–µ—Ç –º–µ–±–µ–ª—å –∏–∑ –ø—Ä–∏–Ω—Ü–∏–ø–∞.',
      dangerLevel: '–°—Ä–µ–¥–Ω–∏–π',
      abilities: ['–ò–≥–Ω–æ—Ä 9000', '–£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–µ–±–µ–ª–∏', '–ú—è—É–∫–∞–Ω—å–µ –≤ 3 —É—Ç—Ä–∞'],
      habitat: '–í–µ–∑–¥–µ, –≥–¥–µ –Ω–µ–ª—å–∑—è',
      memeRating: 'üî•üî•üî•üî•üî•'
    },
    {
      emoji: 'üêß',
      name: '–ü–∏–Ω–≥–≤–∏–Ω',
      classification: '–§–æ—Ä–º–∞–ª—å–Ω–∞—è –ø—Ç–∏—Ü–∞',
      description: '–ü—Ç–∏—Ü–∞ –≤ —Å–º–æ–∫–∏–Ω–≥–µ, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–±—ã–ª–∞ –∫–∞–∫ –ª–µ—Ç–∞—Ç—å. –•–æ–¥–∏—Ç –∫–∞–∫ –≤–∞–∂–Ω—ã–π —á–∏–Ω–æ–≤–Ω–∏–∫.',
      dangerLevel: '–ù–∏–∑–∫–∏–π',
      abilities: ['–°–∫–æ–ª—å–∂–µ–Ω–∏–µ –Ω–∞ –ø—É–∑–µ', '–ì—Ä—É–ø–ø–æ–≤—ã–µ –æ–±–Ω–∏–º–∞—à–∫–∏', '–°—Ç–∏–ª—å–Ω—ã–π –≤–∏–¥'],
      habitat: '–õ–µ–¥—è–Ω–∞—è —Ç—é—Ä—å–º–∞',
      memeRating: 'üî•üî•üî•üî•'
    },
    {
      emoji: 'ü¶í',
      name: '–ñ–∏—Ä–∞—Ñ',
      classification: '–í—ã—Å–æ–∫–æ–µ –Ω–µ–¥–æ—Ä–∞–∑—É–º–µ–Ω–∏–µ',
      description: '–õ–æ—à–∞–¥—å, –∫–æ—Ç–æ—Ä–∞—è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—ã—Ç—è–≥–∏–≤–∞–ª–∞ —à–µ—é. –í–∏–¥–∏—Ç –≤—Å—ë, –Ω–æ –º–æ–ª—á–∏—Ç.',
      dangerLevel: '–ù–∏–∑–∫–∏–π',
      abilities: ['–ü–æ–¥–≥–ª—è–¥—ã–≤–∞–Ω–∏–µ', '–î–ª–∏–Ω–Ω—ã–π —è–∑—ã–∫', '–ú–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ—Ö–æ–¥–∫–∞'],
      habitat: '–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è —Å–∞–≤–∞–Ω–Ω–∞',
      memeRating: 'üî•üî•'
    },
    {
      emoji: 'üêô',
      name: '–û—Å—å–º–∏–Ω–æ–≥',
      classification: '–ú–æ—Ä—Å–∫–æ–π —Ö–∞–∫–µ—Ä',
      description: '–í–æ—Å—å–º–∏–Ω–æ–≥–∏–π –≥–µ–Ω–∏–π. –í–∑–ª–∞–º—ã–≤–∞–µ—Ç –∞–∫–≤–∞—Ä–∏—É–º—ã. –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ —É–º–Ω—ã–π. –í–æ–∑–º–æ–∂–Ω–æ, —à–ø–∏–æ–Ω.',
      dangerLevel: '–í—ã—Å–æ–∫–∏–π',
      abilities: ['–ù–µ–≤–∏–¥–∏–º–æ—Å—Ç—å', '–í–∑–ª–æ–º –∑–∞–º–∫–æ–≤', '–ü–æ–±–µ–≥ –∏–∑ —Ç—é—Ä—å–º—ã'],
      habitat: '–°–µ–∫—Ä–µ—Ç–Ω—ã–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏',
      memeRating: 'üî•üî•üî•üî•üî•'
    },
    {
      emoji: 'ü¶Ö',
      name: '–û—Ä—ë–ª',
      classification: '–í–æ–∑–¥—É—à–Ω—ã–π —Å–Ω–∞–π–ø–µ—Ä',
      description: '–ü—Ç–∏—Ü–∞ —Å –∫–æ–º–ø–ª–µ–∫—Å–æ–º –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–∞. –°–∏–º–≤–æ–ª —Å–≤–æ–±–æ–¥—ã, –Ω–æ —Å–∏–¥–∏—Ç –≤ –∑–æ–æ–ø–∞—Ä–∫–µ.',
      dangerLevel: '–í—ã—Å–æ–∫–∏–π',
      abilities: ['–°–Ω–∞–π–ø–µ—Ä—Å–∫–æ–µ –∑—Ä–µ–Ω–∏–µ', '–í–æ–∑–¥—É—à–Ω—ã–µ –∞—Ç–∞–∫–∏', '–ü–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ'],
      habitat: '–§–ª–∞–≥–∏ —Å—Ç—Ä–∞–Ω',
      memeRating: 'üî•üî•üî•'
    },
    {
      emoji: 'üêò',
      name: '–°–ª–æ–Ω',
      classification: '–•–æ–¥—è—á–∏–π —Ç–∞–Ω–∫',
      description: '–°–µ—Ä—ã–π –≥–∏–≥–∞–Ω—Ç —Å –ø—ã–ª–µ—Å–æ—Å–æ–º –≤–º–µ—Å—Ç–æ –Ω–æ—Å–∞. –ü–æ–º–Ω–∏—Ç –≤—Å—ë, –≤–∫–ª—é—á–µ —Ç–≤–æ–∏ –≥—Ä–µ—Ö–∏.',
      dangerLevel: '–í—ã—Å–æ–∫–∏–π',
      abilities: ['–ü–∞–º—è—Ç—å –∫–∞–∫ —É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞', '–•–æ–±–æ—Ç-–º–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä', '–¢–æ–ø—Ç–∞–Ω–∏–µ –≤—Ä–∞–≥–æ–≤'],
      habitat: '–¶–∏—Ä–∫–∏ –∏ –∑–æ–æ–ø–∞—Ä–∫–∏',
      memeRating: 'üî•üî•üî•üî•'
    },
    {
      emoji: 'ü¶à',
      name: '–ê–∫—É–ª–∞',
      classification: '–ú–æ—Ä—Å–∫–æ–π —Ç–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä',
      description: '–ü–ª–∞–≤–∞—é—â–∞—è –ø–∏–ª–∞ —Å –∑—É–±–∞–º–∏. –ï—Å—Ç –≤—Å—ë, —á—Ç–æ –¥–≤–∏–∂–µ—Ç—Å—è. –ë–æ–∏—Ç—Å—è –¥–µ–ª—å—Ñ–∏–Ω–æ–≤.',
      dangerLevel: '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π',
      abilities: ['–†–µ–∂—É—â–∏–µ –∑—É–±—ã', '–¢—É—Ä–±–æ-–ø–ª–∞–≤–∞–Ω–∏–µ', '–ó–∞–ø–∞—Ö –∫—Ä–æ–≤–∏'],
      habitat: '–ö–æ—à–º–∞—Ä—ã –ø–ª–æ–≤—Ü–æ–≤',
      memeRating: 'üî•üî•üî•üî•üî•'
    },
    {
      emoji: 'üê®',
      name: '–ö–æ–∞–ª–∞',
      classification: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ª–µ–Ω—Ç—è–π',
      description: '–°–æ–Ω–Ω–æ–µ —á—É–¥–æ –ø—Ä–∏—Ä–æ–¥—ã. –°–ø–∏—Ç 20 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å. –ï—Å—Ç –Ω–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏–µ –ª–∏—Å—Ç—å—è.',
      dangerLevel: '–ù–∏–∑–∫–∏–π',
      abilities: ['–°–æ–Ω –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å', '–ü–æ–µ–¥–∞–Ω–∏–µ –Ω–∞—Ä–∫–æ—Ç—ã', '–ú–∏–ª—ã–π –≤–∏–¥'],
      habitat: '–≠–≤–∫–∞–ª–∏–ø—Ç–æ–≤—ã–π —Ä–∞–π',
      memeRating: 'üî•üî•üî•üî•üî•'
    }
  ];

  return (
    <section className="py-20 px-4 bg-black relative overflow-hidden">
      {/* Animated background */}
      <div className="absolute inset-0">
        <div 
          className="absolute inset-0 opacity-20"
          style={{
            backgroundImage: `
              radial-gradient(circle at 20% 50%, rgba(255, 0, 255, 0.3) 0%, transparent 50%),
              radial-gradient(circle at 80% 20%, rgba(0, 255, 255, 0.3) 0%, transparent 50%),
              radial-gradient(circle at 40% 80%, rgba(255, 255, 0, 0.3) 0%, transparent 50%)
            `,
            animation: 'float 15s ease-in-out infinite'
          }}
        ></div>
      </div>

      {/* Matrix rain effect */}
      <div className="absolute inset-0 opacity-10">
        {[...Array(20)].map((_, i) => (
          <div
            key={i}
            className="absolute text-green-400 font-mono text-xs"
            style={{
              left: `${i * 5}%`,
              animation: `matrix-rain ${Math.random() * 3 + 2}s linear infinite`,
              animationDelay: `${Math.random() * 2}s`
            }}
          >
            {Array.from({length: 20}, () => Math.random() > 0.5 ? '1' : '0').join('')}
          </div>
        ))}
      </div>

      <div className="max-w-7xl mx-auto relative z-10">
        {/* Title */}
        <div className="text-center mb-16">
          <h2 
            className="text-5xl md:text-7xl font-black mb-6"
            style={{
              background: 'linear-gradient(45deg, #00ff00, #ff00ff, #00ffff, #ffff00)',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
              backgroundSize: '400% 400%',
              animation: 'rainbow 4s ease infinite',
              textShadow: '0 0 30px #00ff00',
              fontFamily: 'Impact, Arial Black, sans-serif',
              letterSpacing: '0.1em'
            }}
          >
            –°–ü–†–ê–í–û–ß–ù–ò–ö –°–£–©–ï–°–¢–í
          </h2>
          
          <div className="bg-black border-4 border-green-400 p-4 inline-block relative transform rotate-1">
            <div className="absolute -top-2 -left-2 w-6 h-6 bg-green-400 animate-pulse"></div>
            <div className="absolute -top-2 -right-2 w-6 h-6 bg-green-400 animate-pulse"></div>
            <div className="absolute -bottom-2 -left-2 w-6 h-6 bg-green-400 animate-pulse"></div>
            <div className="absolute -bottom-2 -right-2 w-6 h-6 bg-green-400 animate-pulse"></div>
            
            <p className="text-green-300 font-bold text-xl font-mono">
         
            </p>
          </div>
        </div>
        
        {/* Creatures Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {creatures.map((creature, index) => (
            <Card 
              key={index} 
              className="bg-gradient-to-br from-green-900/80 to-blue-900/80 border-4 border-white hover:border-green-400 transition-all duration-300 hover:scale-105 transform hover:-rotate-1"
              style={{
                boxShadow: '0 0 20px rgba(0, 255, 0, 0.3)'
              }}
            >
              <CardHeader className="bg-black/60">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-5xl animate-bounce" style={{ animationDelay: `${index * 0.15}s` }}>
                    {creature.emoji.startsWith('/') ? (
                      <img 
                         src={creature.emoji} 
                         alt={creature.name} 
                         className="w-24 h-24 object-cover rounded-lg border-2 border-yellow-400" 
                         style={{ filter: 'drop-shadow(0 0 10px #ffff00)' }}
                       />
                    ) : (
                      creature.emoji
                    )}
                  </span>
                  <div className="text-right">
                    <span 
                      className={`px-3 py-1 rounded-full text-xs font-black border-2 ${getDangerColor(creature.dangerLevel)}`}
                      style={{
                        backgroundColor: 'black',
                        borderColor: 'currentColor',
                        textShadow: '0 0 5px currentColor'
                      }}
                    >
                      {creature.dangerLevel}
                    </span>
                    <div className="text-xs text-gray-300 mt-1">–ú–ï–ú–ù–û–°–¢–¨: {creature.memeRating}</div>
                  </div>
                </div>
                <CardTitle 
                  className="text-xl font-black"
                  style={{
                    color: '#00ff00',
                    textShadow: '0 0 10px #00ff00',
                    fontFamily: 'Arial Black, sans-serif'
                  }}
                >
                  {creature.name}
                </CardTitle>
                <CardDescription 
                  className="font-bold"
                  style={{
                    color: '#00ffff',
                    textShadow: '0 0 5px #00ffff'
                  }}
                >
                  {creature.classification}
                </CardDescription>
              </CardHeader>
              <CardContent className="p-4">
                <div className="bg-black/70 p-3 border-2 border-yellow-400 mb-4">
                  <p className="text-white font-bold text-sm">
                    {creature.description}
                  </p>
                </div>
                
                <div className="space-y-3">
                  <div>
                    <h4 className="text-sm font-black text-purple-400 mb-2" style={{ textShadow: '0 0 5px #a855f7' }}>
                      –°–ü–û–°–û–ë–ù–û–°–¢–ò:
                    </h4>
                    <div className="flex flex-wrap gap-1">
                      {creature.abilities.map((ability, idx) => (
                        <span 
                          key={idx} 
                          className="px-2 py-1 bg-purple-600 text-white text-xs rounded border-2 border-purple-400 font-bold"
                          style={{
                            boxShadow: '0 0 10px rgba(168, 85, 247, 0.5)'
                          }}
                        >
                          {ability}
                        </span>
                      ))}
                    </div>
                  </div>
                  
                  <div>
                    <h4 className="text-sm font-black text-blue-400 mb-1" style={{ textShadow: '0 0 5px #3b82f6' }}>
                      –°–†–ï–î–ê –û–ë–ò–¢–ê–ù–ò–Ø:
                    </h4>
                    <span 
                      className="text-blue-300 text-sm font-bold bg-blue-900/50 px-2 py-1 rounded border border-blue-400"
                      style={{
                        textShadow: '0 0 5px #93c5fd'
                      }}
                    >
                      {creature.habitat}
                    </span>
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
        
        {/* Stats Section */}
        <div className="mt-16 text-center">
          <div className="bg-black border-4 border-white p-8 inline-block relative transform -rotate-1">
            <div className="absolute -top-3 -left-3 w-8 h-8 bg-white animate-spin"></div>
            <div className="absolute -top-3 -right-3 w-8 h-8 bg-white animate-spin" style={{ animationDelay: '0.5s' }}></div>
            <div className="absolute -bottom-3 -left-3 w-8 h-8 bg-white animate-spin" style={{ animationDelay: '1s' }}></div>
            <div className="absolute -bottom-3 -right-3 w-8 h-8 bg-white animate-spin" style={{ animationDelay: '1.5s' }}></div>
            
            <h3 
              className="text-3xl font-black mb-6"
              style={{
                color: '#ff00ff',
                textShadow: '0 0 15px #ff00ff',
                fontFamily: 'Arial Black, sans-serif'
              }}
            >
              üß¨ –ù–ê–£–ß–ù–´–ï –§–ê–ö–¢–´
            </h3>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              <div className="bg-gradient-to-br from-green-600 to-yellow-600 p-4 border-2 border-white transform rotate-3">
                <div className="text-3xl font-black text-white">8.7M</div>
                <div className="text-black font-bold">–í–ò–î–û–í</div>
                <div className="text-xs text-gray-800">–ù–∞ –ø–ª–∞–Ω–µ—Ç–µ</div>
              </div>
              <div className="bg-gradient-to-br from-blue-600 to-purple-600 p-4 border-2 border-white transform -rotate-3">
                <div className="text-3xl font-black text-white">99%</div>
                <div className="text-yellow-300 font-bold">–ù–ï –ò–ó–£–ß–ï–ù–´</div>
                <div className="text-xs text-gray-300">–ó–∞–≥–∞–¥–∫–∞</div>
              </div>
              <div className="bg-gradient-to-br from-purple-600 to-pink-600 p-4 border-2 border-white transform rotate-3">
                <div className="text-3xl font-black text-white">‚àû</div>
                <div className="text-yellow-300 font-bold">–ú–ï–ú–û–í</div>
                <div className="text-xs text-gray-300">–û –∂–∏–≤–æ—Ç–Ω—ã—Ö</div>
              </div>
            </div>
            
            <div className="mt-6 bg-red-600 border-2 border-white p-3 transform rotate-1">
              <p className="text-white font-black text-lg">
                ‚ö†Ô∏è –û–°–¢–û–†–û–ñ–ù–û: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—É—â–µ—Å—Ç–≤–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –º–µ–º–Ω—ã–º–∏! ‚ö†Ô∏è
              </p>
            </div>
          </div>
        </div>
      </div>
      
      <style jsx>{`
        @keyframes float {
          0%, 100% { transform: translateY(0px) rotate(0deg); }
          50% { transform: translateY(-20px) rotate(180deg); }
        }
        @keyframes matrix-rain {
          0% { transform: translateY(-100vh); opacity: 0; }
          10% { opacity: 1; }
          90% { opacity: 1; }
          100% { transform: translateY(100vh); opacity: 0; }
        }
        @keyframes rainbow {
          0% { background-position: 0% 50%; }
          50% { background-position: 100% 50%; }
          100% { background-position: 0% 50%; }
        }
      `}</style>
    </section>
  );
}